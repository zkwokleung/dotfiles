# Change working directory to the top-most Finder window location
function cdf() { # short for `cdfinder`
    cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')"
}

# Change working directory and list contents
function cdls() { cd "$@" && ls; }

# Open current working directory in Finder or optionally open the given location
function o() {
    if [ $# -eq 0 ]; then
        open .
    else
        open "$@"
    fi
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
# ? Sources: https://github.com/mathiasbynens/dotfiles
function tre() {
    tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX
}

function :q() {
    for i in {30..37}; do
        # Display hello message
        echo -e "\e[00;${i}mYOU ARE NOT USING VIM!!!!!!!!\e[00m"
    done
}

# NPM functions
function nbd() {
    npm run build
    npm run deploy
}

# Conda
function conact() {
    conda activate $1
    conda env list
}

function condeact() {
    conda deactivate
    conda env list
}

function conin() {
    conda info --envs
}

function doge() {
    cd ~/Pictures/Animals
    ascii-image-converter polite-dog.png
    cd - >0
}

function capy() {
    cd ~/Pictures/Animals
    ascii-image-converter capy-1.jpeg
    cd - >0
}

function current-whether() {
    while true;
    do
        clear
        curl -s wttr.in | head -7 
        echo "\n"
        echo "Last Updated: $(date)"
        sleep 1800
    done
}

function future-whether() {
    while true;
    do
        clear
        curl -s wttr.in | head -27 | tail -20 
        echo "\n"
        echo "Last Updated: $(date)"
        sleep 3000
    done
}

function moon-phase() {
    while true; 
    do
        clear
        curl wttr.in/moon | head -24
        sleep 3600
    done
}

function quote-display() {
    while true;
    do
        clear
        TEXT=$(curl https://zenquotes.io/api/random -s | jq -r '.[0].q')
        COLUMNS=$(tput cols)
        ROWS=$(tput lines)
        CENTERROW=$(($ROWS/2))

        for _ in $(seq 2 $CENTERROW); do
            printf "\n"
        done

        printf "%*s\n" $(((${#TEXT}+$COLUMNS)/2)) "$TEXT"
        sleep 1500
    done
}

function loading() {
    printf "%s\n" "Loading Brain Cells. . ."

    MAX=100
     
    while true; do
        for i in $(seq 0 $MAX); do
            printf  "%s" "["
            for _ in $(seq 0 "$i"); do
                printf "%s" "â–ˆ"
            done
            for _ in $(seq 0 $(($MAX-$i))); do
                printf " " 
            done
            printf "%s" "]"
            sleep $(awk -v n=10 -v seed="$RANDOM" 'BEGIN { srand(seed); printf("%.4f\n", rand()%.7f) }')
            printf "\r"
        done
        curl "http://www.randomnumberapi.com/api/v1.0/randomstring?min=$MAX"
        sleep 1
    done
}
